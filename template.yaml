# Copyright 2019 Ben Kehoe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Transform: 'AWS::Serverless-2016-10-31'
Outputs:
  Api:
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${ApiStage}"
Resources:
  Api:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
        - REGIONAL

  CreateUrlResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt Api.RootResourceId
      PathPart: urls
      RestApiId: !Ref Api

  CreateUrlMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId: !Ref CreateUrlResource
      RestApiId: !Ref Api
      AuthorizationType: AWS_IAM
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${CreateUrlFunction}/invocations"
  
  CreateUrlInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CreateUrlFunction
      Action: "lambda:InvokeFunction"
      Principal: apigateway.amazonaws.com

  HandleCallbackResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt Api.RootResourceId
      PathPart: respond
      RestApiId: !Ref Api

  HandleCallbackMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId: !Ref HandleCallbackResource
      RestApiId: !Ref Api
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${HandleCallbackFunction}/invocations"

  HandleCallbackInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref HandleCallbackFunction
      Action: "lambda:InvokeFunction"
      Principal: apigateway.amazonaws.com

  CreateUrlFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./src
      Runtime: python3.6
      Handler: create_urls.handler
      # Events:
      #   Api:
      #     Type: Api
      #     Properties:
      #       RestApiId: !Ref Api
      #       Path: "/urls"
      #       Method: POST
  
  HandleCallbackFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./src
      Runtime: python3.6
      Handler: handle_callback.handler
      Policies:
        - Statement:
            Effect: Allow  
            Action:
              - states:SendTaskSuccess
              - states:SendTaskFailure
              - states:SendTaskHeartbeat
            Resource: "*"
      # Events:
      #   Api:
      #     Type: Api
      #     Properties:
      #       RestApiId: !Ref Api
      #       Path: "/respond"
      #       Method: GET
      #       Auth:
      #         Authorizer: NONE
  
  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - CreateUrlMethod
      - HandleCallbackMethod
    Properties:
      RestApiId: !Ref Api
  
  ApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref Api
      StageName: v1
      DeploymentId: !Ref ApiDeployment
